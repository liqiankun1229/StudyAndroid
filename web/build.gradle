apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'signing'
//apply plugin: com.example.lib.ACustomPlugin

ext {
    application_id = "com.lqk.web"
    version_code = 1
    version_name = "1.0"
}

android {
    compileSdkVersion projectTargetSDK
//    resourcePrefix "web_"
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    defaultConfig {
        applicationId application_id
        minSdkVersion projectMinSDK
        targetSdkVersion projectTargetSDK
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
//            abiFilters "armeabi-v7a", "arm64-v8a"
            abiFilters.clear()
        }
        // 替换 manifest 中 保存的 meta-data ${XXX} 字段  PS:必须有才能替换
        manifestPlaceholders = [
                "CHANNEL": "lqk"
        ]
    }
    // 编译类型 一般为 debug/release
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    "APP_TYPE": "DEBUG"
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    "APP_TYPE": "release"
            ]
        }
    }
    // 编译选项
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    // 资源配置
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
    // 多渠道
    flavorDimensions "version"
    productFlavors {
        huawei {
            dimension "version"
            manifestPlaceholders = [
                    "CHANNEL"    : "huawei",
                    "CHANNEL_APK": name
            ]
        }
        xiaomi {
            dimension "version"
            manifestPlaceholders = [
                    "CHANNEL"    : "xiaomi",
                    "CHANNEL_APK": name
            ]
        }
        oppo {
            dimension "version"
            manifestPlaceholders = [
                    "CHANNEL"    : "oppo",
                    "CHANNEL_APK": name
            ]
        }
        vivo {
            dimension "version"
            manifestPlaceholders = [
                    "CHANNEL"    : "vivo",
                    "CHANNEL_APK": name
            ]
        }
        // 统一替换
        productFlavors.all {
            (flavor) -> {
                manifestPlaceholders = [
                        "CHANNEL_APK": name + "-test"
                ]
            }
        }
    }
    // 打包文件
    applicationVariants.all {
        (variant) -> {
            def name = (project.name != app) ? project.name : rootProject.name
            def apkName = name + "_" + variant.flavorName + "_" + new Date().format("yyyyyMMddhhmm") + ".apk"
            def path = "../../"
            outputFileName = apkName
            variant.assemble.doLast {
                // 复制文件
            }
        }
    }
    // 分包
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
        }
    }
}

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

configurations.all {

}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    // AndroidX 库
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation project(':common')
    implementation 'com.lqk:common:0.0.4'
    implementation project(':network')
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    api("io.github.lucksiege:pictureselector:v2.7.3-rc08")
    // Glide 图片加载
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    //api 'com.tencent.tbs:tbssdk:44085'
    implementation("mysql:mysql-connector-java:8.0.28")
    api("com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.7")

    // 数据存储 KV 替代 sp
    api("com.tencent:mmkv-static:1.2.11")
    implementation "androidx.work:work-runtime-ktx:2.7.1"

}

