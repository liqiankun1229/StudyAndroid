apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 31


    defaultConfig {
        applicationId "com.example.rxjava"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    // AndroidX åº“
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation "io.reactivex.rxjava3:rxjava:3.1.3"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

    implementation project(':common')
//    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'
//    // If you want to bind to Android-specific lifecycles
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.1.0'
//    // If you want pre-written Activities and Fragments you can subclass as providers
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'
//    // If you want pre-written support preference Fragments you can subclass as providers
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.1.0'
//    // If you want to use Android Lifecycle for providers
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.1.0'
//    // If you want to use Kotlin syntax
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.1.0'
//    // If you want to use Kotlin syntax with Android Lifecycle
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.1.0'
//    // If you want to use Navi for providers
//    // DEPRECATED: Use rxlifecycle-android-lifecycle instead. This will be removed in a future release.
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-navi:3.1.0'

}
